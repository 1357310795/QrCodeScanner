<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ModernWpf.Controls;assembly=ModernWpf"
                    xmlns:primitives="clr-namespace:ModernWpf.Controls.Primitives;assembly=ModernWpf"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <Style x:Key="SegmentedListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="Background" Value="{DynamicResource ListViewItemBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
        <Setter Property="TextElement.FontSize" Value="14" />
        <Setter Property="Padding" Value="4,8,4,8" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="primitives:ControlHelper.CornerRadius" Value="{DynamicResource ListViewItemCornerRadius}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="primitives:FocusVisualHelper.UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="LayoutRoot"
                            Margin="0" Padding="0"
                            Background="{TemplateBinding Background}"
                            primitives:PressHelper.IsEnabled="True"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}"
                            SnapsToDevicePixels="true">
                        <Border x:Name="RootBorder"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource ControlFillColorTransparentBrush}"
                                CornerRadius="4">
                            <Grid>
                                <Grid x:Name="PressedBackgroundGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.5*" />
                                        <ColumnDefinition Width="16" />
                                        <ColumnDefinition Width="0.5*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle x:Name="PressedBackground"
                                               Height="3.5"
                                               HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                                               Grid.Column="1"
                                               Fill="{DynamicResource ListViewItemSelectionIndicatorBrush}"
                                               Opacity="0"
                                               RadiusX="{Binding Value, Source={StaticResource ListViewItemSelectionIndicatorCornerRadiusProxy}, Converter={StaticResource TopLeftCornerRadiusDoubleValueConverter}}"
                                               RadiusY="{Binding Value, Source={StaticResource ListViewItemSelectionIndicatorCornerRadiusProxy}, Converter={StaticResource BottomRightCornerRadiusDoubleValueConverter}}"
                                               RenderTransformOrigin="0.5,0.5">
                                        <Rectangle.RenderTransform>
                                            <ScaleTransform x:Name="PillTransform" ScaleY="1" />
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                                <Grid x:Name="ContentPresenterGrid"
                                      Margin="0,0,0,0"
                                      Background="Transparent">
                                    <Grid.RenderTransform>
                                        <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
                                    </Grid.RenderTransform>
                                    <local:ContentPresenterEx x:Name="ContentPresenter"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              Margin="{TemplateBinding Padding}" TextElement.Foreground="{TemplateBinding Foreground}"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                                <Border x:Name="MultiSelectSquare"
                                        Width="{DynamicResource CheckBoxSize}"
                                        Height="{DynamicResource CheckBoxSize}"
                                        HorizontalAlignment="Left" VerticalAlignment="Center"
                                        Margin="12,0,0,0"
                                        Background="{DynamicResource ListViewItemCheckBoxBrush}"
                                        BorderBrush="{DynamicResource ListViewItemCheckBoxBorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="{DynamicResource ListViewItemCheckBoxCornerRadius}"
                                        Visibility="Collapsed">
                                    <Border.Clip>
                                        <RectangleGeometry Rect="0,0,20,20">
                                            <RectangleGeometry.Transform>
                                                <TranslateTransform x:Name="MultiSelectClipTransform" />
                                            </RectangleGeometry.Transform>
                                        </RectangleGeometry>
                                    </Border.Clip>
                                    <Border.RenderTransform>
                                        <TranslateTransform x:Name="MultiSelectCheckBoxTransform" />
                                    </Border.RenderTransform>
                                    <local:FontIcon x:Name="MultiSelectCheck"
                                                    Glyph="{DynamicResource CheckBoxCheckedGlyph}"
                                                    Opacity="0" Visibility="Collapsed"
                                                    FontSize="{DynamicResource CheckBoxGlyphSize}"
                                                    FontFamily="{DynamicResource FluentSystemIconsFilled}" />
                                </Border>
                            </Grid>
                        </Border>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleX">
                                            <SplineDoubleKeyFrame KeySpline="1,0,0,0"
                                                                  KeyTime="{DynamicResource ListViewItemScaleAnimationDuration}"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleX">
                                            <SplineDoubleKeyFrame KeySpline="0,0,0,1"
                                                                  KeyTime="{DynamicResource ListViewItemScaleAnimationDuration}"
                                                                  Value="{DynamicResource ListViewItemPillMinScale}" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PillTransform" Storyboard.TargetProperty="ScaleX">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="{DynamicResource ListViewItemPillMinScale}" />
                                            <SplineDoubleKeyFrame KeySpline="0,0,0,1"
                                                                  KeyTime="{DynamicResource ListViewItemScaleAnimationDuration}"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="SelectedInactive" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="MultiSelectStates">
                                <VisualState x:Name="MultiSelectDisabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                            <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333"
                                                                  Value="-32" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                            <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333"
                                                                  Value="32" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
                                            <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBackgroundGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MultiSelectEnabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
                                            <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
                                            <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
                                            <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PressedBackgroundGrid" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                                            <DiscreteThicknessKeyFrame KeyTime="0" Value="32,0,0,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="LayoutRoot" Property="Opacity" Value="{DynamicResource ListViewItemDisabledThemeOpacity}" />
                            <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource ListViewItemCheckBoxDisabledBorderBrush}" />
                            <Setter TargetName="MultiSelectSquare" Property="Background" Value="{DynamicResource ListViewItemCheckBoxDisabledBrush}" />
                        </Trigger>
                        <Trigger SourceName="LayoutRoot" Property="primitives:PressHelper.IsPressed" Value="True">
                            <Setter TargetName="LayoutRoot" Property="primitives:ControlHelper.VisualState" Value="Pressed" />
                        </Trigger>
                        <Trigger SourceName="LayoutRoot" Property="primitives:PressHelper.IsPressed" Value="False">
                            <Setter TargetName="LayoutRoot" Property="primitives:ControlHelper.VisualState" Value="Normal" />
                        </Trigger>
                        <DataTrigger Binding="{Binding SelectionMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Value="Single">
                            <Setter TargetName="LayoutRoot" Property="primitives:ControlHelper.VisualState" Value="MultiSelectDisabled" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectionMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Value="Extended">
                            <Setter TargetName="LayoutRoot" Property="primitives:ControlHelper.VisualState" Value="MultiSelectDisabled" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectionMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}" Value="Multiple">
                            <Setter TargetName="LayoutRoot" Property="primitives:ControlHelper.VisualState" Value="MultiSelectEnabled" />
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                            <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource AccentFillColorSecondaryBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition SourceName="LayoutRoot" Property="primitives:PressHelper.IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
                            <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource AccentFillColorTertiaryBrush}" />
                        </MultiTrigger>
                        <!--  Selected  -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="MultiSelectCheck" Property="Opacity" Value="1" />
                            <Setter TargetName="PressedBackground" Property="Opacity" Value="1" />
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ControlFillColorDefaultBrush}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource ControlElevationBorderBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                            <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource AccentFillColorDefaultBrush}" />
                        </Trigger>
                        <!--  SelectedPointerOver  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource SubtleFillColorSecondaryBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
                            <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource AccentFillColorSecondaryBrush}" />
                        </MultiTrigger>
                        <!--  SelectedPressed  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition SourceName="LayoutRoot" Property="primitives:PressHelper.IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
                            <Setter TargetName="RootBorder" Property="BorderBrush" Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
                            <Setter TargetName="ContentPresenter" Property="Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
                            <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource AccentFillColorTertiaryBrush}" />
                        </MultiTrigger>
                        <!--  SelectedDisabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource ListViewItemBackgroundSelectedDisabled}" />
                            <Setter TargetName="PressedBackground" Property="Fill" Value="{DynamicResource ListViewItemSelectionIndicatorDisabledBrush}" />
                            <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource ListViewItemCheckBoxSelectedDisabledBrush}" />
                            <Setter TargetName="MultiSelectSquare" Property="Background" Value="{DynamicResource ListViewItemCheckBoxSelectedDisabledBrush}" />
                            <Setter TargetName="MultiSelectCheck" Property="Foreground" Value="{DynamicResource ListViewItemCheckDisabledBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SegmentedStyle" TargetType="ListView">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Background" Value="{DynamicResource ControlAltFillColorSecondaryBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ControlStrokeColorDefaultBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource SegmentedListViewItemStyle}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="4"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter Grid.Row="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>